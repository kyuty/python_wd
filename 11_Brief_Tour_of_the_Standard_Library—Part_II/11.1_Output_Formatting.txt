This second tour covers more advanced modules that support professional programming needs. These modules rarely occur in small scripts.

第二章涵盖了支持专业编程需求的更高级模块。 这些模块很少出现在小脚本中。

The repr module provides a version of repr() customized for abbreviated displays of large or deeply nested containers:

repr模块提供了一个版本的repr()，用于大型或深层嵌套容器的缩写显示：

>>> import repr
>>> repr.repr(set('supercalifragilisticexpialidocious'))
"set(['a', 'c', 'd', 'e', 'f', 'g', ...])"
>>> repr.repr(set('dcbadcba'))
"set(['a', 'b', 'c', 'd'])"

The pprint module offers more sophisticated control over printing both built-in and user defined objects in a way that is readable by the interpreter. When the result is longer than one line, the “pretty printer” adds line breaks and indentation to more clearly reveal data structure:

pprint模块提供了更加复杂的控制，可以以解释器可读的方式打印内置和用户定义的对象。当结果长于一行时，“漂亮的打印机”会添加换行符和缩进以更清楚地显示数据结构：

>>> import pprint
>>> t = [[[['black', 'cyan'], 'white', ['green', 'red']], [['magenta',
...     'yellow'], 'blue']]]
...
>>> pprint.pprint(t, width=30)
[[[['black', 'cyan'],
   'white',
   ['green', 'red']],
  [['magenta', 'yellow'],
   'blue']]]

The textwrap module formats paragraphs of text to fit a given screen width:

textwrap模块格式化文本段落以适合给定的屏幕宽度：

>>> import textwrap
>>> doc = """The wrap() method is just like fill() except that it returns
... a list of strings instead of one big string with newlines to separate
... the wrapped lines."""
...
>>> print textwrap.fill(doc, width=40)
The wrap() method is just like fill()
except that it returns a list of strings
instead of one big string with newlines
to separate the wrapped lines.

The locale module accesses a database of culture specific data formats. The grouping attribute of locale’s format function provides a direct way of formatting numbers with group separators:

语言环境模块访问文化特定数据格式的数据库。 locale格式函数的分组属性提供了使用组分隔符格式化数字的直接方法：

>>> import locale
>>> locale.setlocale(locale.LC_ALL, 'English_United States.1252')
'English_United States.1252'
>>> conv = locale.localeconv()          # get a mapping of conventions
>>> x = 1234567.8
>>> locale.format("%d", x, grouping=True)
'1,234,567'
>>> locale.format_string("%s%.*f", (conv['currency_symbol'],
...                      conv['frac_digits'], x), grouping=True)
'$1,234,567.80'